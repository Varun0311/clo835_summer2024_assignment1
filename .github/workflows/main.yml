name: CI/CD Pipeline for Docker to ECR

on:
  push:
    branches:
      - main  # Change this to your main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ secrets.ECR_REGISTRY }}  # Use the ECR registry secret
          region: us-east-1  # Specify the region here if needed


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build the Docker image
        run: |
          docker build -t assignment1 .

      - name: Tag the Docker image
        run: |
          docker tag assignment1:latest ${{ secrets.ECR_REGISTRY }}/assignment1:latest

      - name: Push the Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}/assignment1:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}  # Add session token
          aws-region: us-east-1  # Specify the region here

      - name: Deploy the Docker image to EC2 using SSM
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=Amazon-Linux-Instance" --query "Reservations[0].Instances[0].InstanceId" --output text)

          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=$INSTANCE_ID" \
            --parameters 'commands=["docker pull '${{ secrets.ECR_REGISTRY }}/assignment1:latest'","docker stop assignment1 || true","docker rm assignment1 || true","docker run -d -p 80:80 '${{ secrets.ECR_REGISTRY }}/assignment1:latest'"]'
